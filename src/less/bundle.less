@rem-base: 16px;
@container: body;
@sidebar: aside;

@container-width: 900px;
@container-padding: 1rem;
@container-padding-px: unit(@container-padding) * @rem-base;

@column-basis-width: 70%;
@column-padding: 0.5rem;

@sidebar-basis-width: 30%;
@sidebar-basis-width-px: ((@container-width - (@container-padding-px * 2)) / 100) * unit(@sidebar-basis-width);

@{container} {
  // positioning
  margin-right: auto;
  margin-left: auto;
  padding: 2rem 1rem 3rem;
  max-width: @container-width;

  // flexbox container
  display: flex;
  flex-direction: row;
  flex-wrap: wrap; // wrap children when shrinked beyond min-width
  align-items: stretch; // stretch children full height
  justify-content: center; // center children horizontally
  * { min-width: 0; } // $fix: make descendents of flex items respect overflow property (specially `pre` tag)

  // flexbox items
  > * {
    flex-grow: 1;
    flex-shrink: 0;
    flex-basis: calc(@column-basis-width ~"-" (@column-padding * 2)); // $fix: substract padding
    padding-right: @column-padding;
    padding-left: @column-padding;
    max-width: 100%;
  }

  > @{sidebar} {
    flex-grow: 1;
    flex-shrink: 0;
    flex-basis: calc(@sidebar-basis-width ~"-" (@column-padding * 2)); // $fix: substract padding width for IE11
    min-width: calc(@sidebar-basis-width-px ~"-" 5%); // wrap column if it shrinks more than 5% of its width
  }
}

// $fix: substract padding
// because IE11 counts padding as part of the element width
